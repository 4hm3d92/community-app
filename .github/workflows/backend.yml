# This workflow will build the golang backend part
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Community App Backend CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
    - 'backend/**'

jobs:
  build-backend:
    name: "Build Go backend"
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

# it might eat lots of memory and it's failing due to some C dependencies
#    - name: Install `govulncheck`
#      run: go install golang.org/x/vuln/cmd/govulncheck@latest

#    - name: Run `govulncheck`
#      working-directory: ./backend
#      run: govulncheck ./...

    - name: Go Tidy
      working-directory: ./backend
      run: go mod tidy

    - name: Go Mod
      working-directory: ./backend
      run: go mod download

    - name: Go Mod Verify
      working-directory: ./backend
      run: go mod verify

    - name: Build
      working-directory: ./backend
      run: go build -v -a -o ./build/community
      
    - name: Stop service before overwriting binary file
      run: sudo systemctl stop community-web.service


    - name: Copy built Go binary
      working-directory: ./backend
      run: sudo cp ./build/community /usr/bin/community
    
  deploy-backend:
    needs: build-backend
    name: "Deploy Go backend"
    runs-on: self-hosted
#    env:
#      POSTGRES_USER: ${{ secrets.PG_USER }}
#      POSTGRES_PASSWORD: ${{ secrets.PG_PASS }}
#      POSTGRES_DB: ${{ secrets.PG_DATABASE }}
#      POSTGRES_HOST: ${{ secrets.PG_HOST }}
      
    steps:

    - name: Deploy Go backend
      run: |
        sudo setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/community
        sudo systemctl restart community-web.service
    
